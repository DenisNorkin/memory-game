{"version":3,"file":"main.ae6228f2f59e0811902b.js","mappings":"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","sources":["webpack://webpack-config/./src/index.js"],"sourcesContent":["import './styles/index.scss';\r\n\r\nconst cardBox = document.querySelector('.card-box');\r\nconst scoreBox = document.querySelector('.score-box');\r\nconst startBox = document.querySelector('.start-box');\r\nconst startBtn = document.querySelector('.start-btn');\r\nconst scoreBtn = document.querySelector('.score-btn');\r\nconst backBtn = document.querySelector('.back-btn');\r\nconst restartBtn = document.querySelector('.restart-btn');\r\nconst dataItem = document.querySelectorAll('[data-index]');\r\nconst itemBack = document.querySelectorAll('.item-back');\r\nconst statisticsBox = document.querySelector('.statistics-box');\r\nconst resultCheck = document.querySelectorAll('.step');\r\nconst resultBox = document.querySelector('.result');\r\nconst cardItem = document.querySelectorAll('.card-item');\r\nconst checkTime = document.querySelector('#check-time');\r\nconst time = document.querySelector('.time');\r\nconst icons = [\r\n  'anchor', 'anchor', \r\n  'trophy', 'trophy', \r\n  'star', 'star', \r\n  'dove', 'dove', \r\n  'chess-queen', 'chess-queen', \r\n  'database', 'database', \r\n  'save', 'save', \r\n  'archive', 'archive',\r\n  'cut', 'cut'\r\n]\r\nlet randomNumber = [];\r\nlet newIcons = [];\r\nlet hasFlipCard = false;\r\nlet firstCard, \r\n    secondCard,\r\n    firstCardFront,\r\n    secondCardFront,\r\n    firstCardBack,\r\n    secondCardBack,\r\n    intervalTime;\r\nlet step = 0;\r\nlet counter = 0;\r\nlet startCount = 0;\r\nlet resultTime = [];\r\n\r\n// Старт игры\r\nfunction startGame() {\r\n  countTime();\r\n  let startNum = Number(localStorage.getItem('start')) + 1;\r\n  if (startNum > 10) {\r\n    startNum = 1;\r\n    localStorage.setItem('start', startNum);\r\n  } else {\r\n    localStorage.setItem('start', startNum);\r\n  }\r\n  setTimeout(() => {\r\n    startBox.style.display = 'none';\r\n  }, 300);\r\n  setTimeout(() => {\r\n    cardBox.style.display = 'flex';\r\n  }, 300);\r\n}\r\nstartBtn.addEventListener('click', startGame);\r\n\r\n// Показать результаты\r\nfunction showScore() {\r\n  setTimeout(() => {\r\n    scoreBox.style.display = 'flex';\r\n  }, 300);\r\n  setTimeout(() => {\r\n    startBox.style.display = 'none';\r\n  }, 300);\r\n}\r\nscoreBtn.addEventListener('click', showScore);\r\n\r\nfunction goBack() {\r\n  setTimeout(() => {\r\n    scoreBox.style.display = 'none';\r\n  }, 300);\r\n  setTimeout(() => {\r\n    startBox.style.display = 'flex';\r\n  }, 300);\r\n}\r\nbackBtn.addEventListener('click', goBack);\r\n\r\n// Генерация рандомных индексов для сортировки массива icons\r\nfor (let i = 0; i < 18; i++) {\r\n  function randomInteger(min, max) {\r\n    let randIndex = min + Math.random() * (max + 1 - min);\r\n    let element = `${Math.floor(randIndex)}`;\r\n    if (randomNumber.includes(Number(element))) {\r\n      randomInteger(0, 17);\r\n    } else {\r\n      return randomNumber.push(Number(element));\r\n    }\r\n  }\r\n  randomInteger(0, 17);\r\n}\r\n// Сортировка массива icons - пуш в newIcons\r\nfunction sortIcons() {\r\n  for (let i = 0; i < randomNumber.length; i++) {\r\n    let index = randomNumber[i];\r\n    newIcons.push(icons[index])\r\n  }\r\n}\r\nsortIcons();\r\n// Сортировка поля для игры\r\nfunction sortCard() {\r\n  itemBack.forEach((el, index) => {\r\n    el.innerHTML = `<i class=\"fas fa-${newIcons[index]}\"></i>`;\r\n  })\r\n}\r\nsortCard();\r\n// Открытие карточки\r\nfunction flipCard(event) {\r\n  const item = event.target;\r\n  const index = Number(item.dataset.index);\r\n  const cardFront = dataItem[index];\r\n  const cardBack = dataItem[index + 1];\r\n  // Образец - переменная для сравнения открытых карточек по строке\r\n  const sample = event.target.parentElement.lastElementChild.innerHTML;\r\n  if (item.classList.contains('item-front')) {\r\n    cardFront.style.transform = 'perspective(600px) rotateY(180deg)';\r\n    cardBack.style.transform = 'perspective(600px) rotateY(0deg)';\r\n    if (!hasFlipCard) {\r\n      hasFlipCard = true;\r\n      firstCard = sample;\r\n      firstCardFront = cardFront;\r\n      firstCardBack = cardBack;\r\n    } else {\r\n      hasFlipCard = false;\r\n      secondCard = sample;\r\n      secondCardFront = cardFront;\r\n      secondCardBack = cardBack;\r\n      checkMatch();\r\n    }\r\n    step++;\r\n    if (step < 10) {\r\n      document.querySelector('.step').innerHTML = `0${step}`;\r\n    } else {\r\n      document.querySelector('.step').innerHTML = step;\r\n    }\r\n    if (step % 2 === 0) {\r\n      for (let i = 0; i < cardItem.length; i++) {\r\n        const element = cardItem[i];\r\n        element.classList.add('disabled');\r\n      }\r\n      setTimeout(() => {\r\n        for (let k = 0; k < cardItem.length; k++) {\r\n          const element = cardItem[k];\r\n          element.classList.remove('disabled')\r\n        }\r\n      }, 500);\r\n    }\r\n    document.querySelector('#check-step').innerHTML = step;\r\n  }\r\n}\r\ncardBox.addEventListener('click', flipCard);\r\n\r\nfunction checkMatch() {\r\n  checkTime.innerHTML = time.innerHTML;\r\n  if (firstCard == secondCard) {\r\n    setTimeout(() => {\r\n      firstCardBack.classList.add('item-back-active');\r\n      secondCardBack.classList.add('item-back-active');\r\n    }, 400);\r\n    counter++;\r\n    if (counter === 9) {\r\n      console.log(resultTime);\r\n      resultTime.push(checkTime.innerHTML)\r\n      localStorage.setItem('time', resultTime)\r\n      clearInterval(intervalTime);\r\n      countTheTotal();\r\n      setTimeout(() => {\r\n        cardBox.style.display = 'none';\r\n      }, 1000);\r\n      setTimeout(() => {\r\n        statisticsBox.style.display = 'flex';\r\n      }, 1000);\r\n    }\r\n  } else {\r\n    setTimeout(() => {\r\n      firstCardFront.style.transform = 'perspective(600px) rotateY(0deg)';\r\n      firstCardBack.style.transform = 'perspective(600px) rotateY(180deg)';\r\n      secondCardFront.style.transform = 'perspective(600px) rotateY(0deg)';\r\n      secondCardBack.style.transform = 'perspective(600px) rotateY(180deg)';\r\n    }, 500);\r\n  }\r\n}\r\n\r\nfunction countTime() {\r\n  let seconds = 0;\r\n  let minutes = 0;\r\n  intervalTime = setInterval(() => {\r\n    seconds++;\r\n    if (seconds < 10) {\r\n      if (minutes < 10) {\r\n        time.innerHTML = `0${minutes}:0${seconds}`;\r\n      } else {\r\n        time.innerHTML = `${minutes}:0${seconds}`;\r\n      }\r\n    } else if (seconds >= 10) {\r\n      if (minutes < 10) {\r\n        time.innerHTML = `0${minutes}:${seconds}`;\r\n      } else {\r\n        time.innerHTML = `${minutes}:${seconds}`;\r\n      }\r\n      if (seconds === 60) {\r\n        seconds = 0;\r\n        minutes++;\r\n      }\r\n    }\r\n  }, 1000);\r\n}\r\n\r\nfunction countTheTotal() {\r\n  startCount = localStorage.getItem('start') + '';\r\n  let res = Number(resultCheck[0].innerHTML) + 1;\r\n  localStorage.setItem(startCount, res);\r\n}\r\n\r\nfunction restartGame() {\r\n  setTimeout(() => {\r\n    document.location.reload();\r\n  }, 300);\r\n}\r\nrestartBtn.addEventListener('click', restartGame);\r\n\r\nfunction getDataLocalStorage() {\r\n  const result = [];\r\n  for (let i = 0; i < localStorage.length; i++) {\r\n    let key = localStorage.key(i);\r\n    if (Number(key) >= 1 || Number(key) <= 10) {\r\n      result.push(Number(localStorage.getItem(key)));\r\n    }\r\n  }\r\n  let arr = result.sort((a, b) => a - b);\r\n  const item = [];\r\n  if (arr.length === 0) {\r\n    document.querySelector('.result-title').innerHTML = 'Результаты отсутствуют!!!';\r\n  } else {\r\n    for (let k = 0; k < arr.length; k++) {\r\n      item[k] = document.createElement('div');\r\n      item[k].innerHTML = `#${k + 1} (шагов): <span class=\"score-list\">${arr[k]}</span>`;\r\n      resultBox.appendChild(item[k]);\r\n    }\r\n  }\r\n}\r\nwindow.addEventListener('load', getDataLocalStorage);"],"names":["firstCard","secondCard","firstCardFront","secondCardFront","firstCardBack","secondCardBack","intervalTime","cardBox","document","querySelector","scoreBox","startBox","startBtn","scoreBtn","backBtn","restartBtn","dataItem","querySelectorAll","itemBack","statisticsBox","resultCheck","resultBox","cardItem","checkTime","time","icons","randomNumber","newIcons","hasFlipCard","step","counter","startCount","resultTime","addEventListener","seconds","minutes","setInterval","innerHTML","startNum","Number","localStorage","getItem","setItem","setTimeout","style","display","i","randomInteger","min","max","randIndex","Math","random","element","floor","includes","push","length","index","sortIcons","forEach","el","event","item","target","dataset","cardFront","cardBack","sample","parentElement","lastElementChild","classList","contains","transform","add","console","log","clearInterval","res","countTheTotal","k","remove","location","reload","window","result","key","arr","sort","a","b","createElement","appendChild"],"sourceRoot":""}